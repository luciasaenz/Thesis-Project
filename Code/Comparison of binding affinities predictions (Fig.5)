# Figure 5 - Compare the binding affinities between the updated and Van Allen predictions

# Load required libraries
library(readxl)
library(dplyr)
library(ggplot2)

ba_predictions <- read_excel("Final_BA_predictions_rev.xlsx") # Read data

# Clean and reshape data
clean_data <- ba_predictions %>%
  filter(Same_best_HLA == TRUE) %>%
  mutate(
    affinity_updated = as.numeric(Lowest_Affinity_NM),
    affinity_van_allen = as.numeric(affinity_van_Allen)
  ) %>%
  select(affinity_updated, affinity_van_allen) %>%
  tidyr::drop_na()

# Paired Wilcoxon test
wilcox_result <- wilcox.test(
  clean_data$affinity_updated,
  clean_data$affinity_van_allen,
  paired = TRUE
)


# Function to assign significance stars
pval_to_stars <- function(p) {
  if (p <= 0.001) return("***")
  else if (p <= 0.01) return("**")
  else if (p <= 0.05) return("*")
  else return("ns")
}

# Create plot data in long format
plot_data <- tidyr::pivot_longer(
  clean_data,
  cols = c(affinity_van_allen, affinity_updated),
  names_to = "source",
  values_to = "affinity"
) %>%
  mutate(source = recode(source,
                         affinity_van_allen = "Van Allen et al. (2015) predictions",
                         affinity_updated = "Updated predictions"))

# Annotation for significance
pvals <- data.frame(
  x_start = 1,
  x_end = 2,
  x_label = 1.5,
  y = 2995,
  label = pval_to_stars(wilcox_result$p.value)
)

# Plot
ggplot(plot_data, aes(x = source, y = affinity, fill = source)) +
  geom_boxplot(width = 0.1, outlier.shape = NA) +
  stat_summary(fun = median, geom = "crossbar", width = 0.4, color = "black", size = 0.5) +
  scale_fill_manual(values = c("Van Allen et al. (2015) predictions" = "#fc8d62", "Updated predictions" = "#fc8d62")) +
  coord_cartesian(ylim = c(0, 3000)) +
  labs(
    x = NULL,
    y = "Binding Affinity (nM)",
    title = "NetMHCpan Predicted Binding Affinities"
  ) +
  geom_segment(data = pvals, aes(x = x_start, xend = x_end, y = y, yend = y), inherit.aes = FALSE, size = 0.4) +
  geom_segment(data = pvals, aes(x = x_start, xend = x_start, y = y, yend = y - 33), inherit.aes = FALSE, size = 0.4) +
  geom_segment(data = pvals, aes(x = x_end, xend = x_end, y = y, yend = y - 33), inherit.aes = FALSE, size = 0.4) +
  geom_text(data = pvals, aes(x = x_label, y = y + 40, label = label), inherit.aes = FALSE, size = 5) +
  theme_classic(base_size = 14) +
  theme(
    axis.ticks.length = unit(0.25, "cm"),
    axis.line = element_line(color = "black"),
    axis.ticks = element_line(color = "black"),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none"
  )
